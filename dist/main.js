(()=>{"use strict";function t(t){const e=new Date(t);return`${["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"][e.getDay()]}, ${["January","February","March","April","May","June","July","August","September","October","November","December"][e.getMonth()]} ${e.getDate()}, ${e.getFullYear()}`}function e(t,e,n){let r;return r=void 0===n?`Weather=${t}, Moment=Day.${e}`:`Weather=${t}, Moment=${n=n.is_day?"Day":"Night"}.${e}`,"svg"===e?`./images/icons/${r}`:`./images/backgrounds/${r}`}function n(t,e,n){return e?`${a(t.temp_c)}째c`:`${a(t.temperature_2m_max[n])}째c`}function r(t,e){return`${a(t.temperature_2m_min[e])}째c`}function a(t){return Math.ceil(t)}function o(t){const e={Clear:[1e3,1,0],Rain:[1063,1069,1180,1183,1186,1189,1192,1195,1198,1201,1237,1240,1243,1246,1249,1252,1261,1264,61,63,65,80,81,82],Storm:[1087,1273,1276,1279,1282,66,67,95,96,99],Cloudy:[1006,1009,1030,1072,1117,1135,1147,1150,1153,1168,1171,1204,1207,45,48,51,53,55,56,57],"Few Clouds":[1003,2,3],Snow:[1066,1114,1210,1213,1216,1219,1222,1225,1255,1258,71,73,75,77,85,86]};return Object.keys(e).find((n=>e[n].includes(t)))}function i(t){const e=document.querySelector(".main__error-prompter");e.querySelector(".error-prompter__heading").textContent=t,e.classList.toggle("main__error-prompter--active"),setTimeout((()=>{e.classList.toggle("main__error-prompter--active")}),4e3)}function c(t,e){const n=t.parentElement.parentElement;"main__intro"===n.classList[0]&&("on"===e?n.classList.add("main__intro--form-activated"):n.className="main__intro")}function s(i){(function(a){const i=document.querySelector(".meta-wrapper__location p"),c=document.querySelector(".meta-wrapper__location time"),s=document.querySelector(".meta-wrapper__time time"),l=document.querySelector(".current__temp"),u=document.querySelector(".range__min-to-max"),m=document.querySelector(".weather-condition__string"),d=document.querySelector(".stat-data__illustration"),p=document.querySelector(".header-container__statistics");var g,_;i.textContent=`${(g=a.location).name}, ${g.region} - ${g.country}`,c.textContent=t(a.location.localtime),s.textContent=a.location.localtime.split(" ")[1],l.textContent=n(a.current,!0),u.textContent=(_=l.textContent,`${r(a.daily,0)} / ${_}`),m.textContent=o(a.current.condition.code),d.src=e(m.textContent,"svg",a.current),p.style.backgroundImage=`url("${e(m.textContent,"png",a.current)}")`})(i),function(t){const e={thermalSensation:`${a(t.current.feelslike_c)}째c`,rainProbability:`${t.daily.precipitation_probability_max[0]}%`,windSpeed:`${a(t.current.wind_kph)} Km/h`,humidity:`${t.current.humidity}%`,uvIndex:t.current.uv},n=Object.keys(e),r=document.querySelector(".overview-section__list");for(let t=0;t<r.children.length;t++)r.children[t].children[1].textContent=e[n[t]]}(i),function(a){const i=a.daily,c=document.querySelector(".predictions__list");c.innerHTML="";for(let a=1;a<6;a++){const s=document.createElement("li"),l=t(i.time[a]).split(",")[0],u=o(i.weathercode[a]);s.innerHTML=`<span class="list__day">\n                            ${l.substring(0,3)}\n                              <span class="day__trimmed-part">\n                                ${l.substring(3)}\n                              </span>\n                            </span>\n                            <img src="${e(u,"svg")}" alt="">\n\n                            <p class="list__stats">\n                                <span class="stats__weather">\n                                    <span class="weather__sr-only">Weather Condition</span>\n                                    ${u}\n                                </span>\n\n                                <span class="list__temp-range">\n                                <span class="temp-range__sr-only">Temperature Range</span>\n                                    ${n(i,!1,a)}\n                                <abbr title="to" class="sr-only">-</abbr>\n                                <span class="temp-range__to">\n                                    ${r(i,a)}\n                                </span>\n                                </span>\n                            </p>`,c.appendChild(s)}}(i)}function l(t,e){t.style.opacity=0,c(t,"off"),void 0===e&&u(t.nextElementSibling,"disabled"),setTimeout((()=>{t.innerHTML=""}),600)}function u(t,e){"active"===e?t.classList.add("form__submit-btn--active"):t.classList.remove("form__submit-btn--active")}function m(t,e){t.style="on"===e?"background: 0% / cover url(./images/icons/loader.svg); animation: 2s spin infinite;":""}!function(){const t=document.querySelectorAll("input"),e=document.querySelectorAll("form"),n=document.querySelectorAll(".form__suggestions-list"),r=document.querySelectorAll(".form__submit-btn"),a=function(t,e=1e3){let n;return(...r)=>{clearTimeout(n),n=setTimeout((()=>{t(...r)}),e)}}(((t,e,n)=>{if(t.length<3)return m(n,"off");(async function(t){try{const e=await fetch(`https://geocoding-api.open-meteo.com/v1/search?name=${t}&count=10&language=en&format=json`),n=(await e.json()).results,r={};return void 0!==n&&n.forEach((t=>{r[`${t.name}, ${void 0===t.admin1?t.country:t.admin1}`]=[t.latitude,t.longitude]})),r}catch(t){return{}}})(t).then((t=>{!function(t,e){e.innerHTML="";const n=Object.keys(t);0!==n.length&&(n.forEach((n=>{const r=document.createElement("li"),a=t[n][0],o=t[n][1];r.innerHTML=`<button data-lat=${a} data-long=${o}>${n}</button>`,e.appendChild(r)})),c(e,"on")),setTimeout((()=>{e.style.opacity=1,u(e.nextElementSibling,"disabled")}),100)}(t,e)})).finally((()=>m(n,"off")))}));e.forEach((t=>t.addEventListener("submit",(t=>t.preventDefault())))),t.forEach((t=>t.addEventListener("input",(t=>{const e=t.target.value.toLowerCase(),n=t.target.parentElement.children[3],r=t.target.nextElementSibling;m(n,"on"),u(n,"active"),""!==e?a(e,r,n):l(r)})))),n.forEach((t=>t.addEventListener("click",(t=>{t.target.classList.add("active");const e=t.target.getAttribute("data-lat"),n=t.target.getAttribute("data-long"),r=t.target.parentElement.parentElement.previousElementSibling,a=t.target.parentElement.parentElement.nextElementSibling;setTimeout((()=>{try{r.value=t.target.textContent,r.setAttribute("data-lat",e),r.setAttribute("data-long",n),l(t.target.parentElement.parentElement,"dontHideBtn"),u(a,"active")}catch(t){}}),500)})))),r.forEach((t=>t.addEventListener("click",(t=>{const e=t.target.parentElement.children[1],n=e.value,r=e.getAttribute("data-lat"),a=e.getAttribute("data-long");if(""!==n){if(!navigator.onLine)return i("Oops! You're currently offline");m(t.target,"on"),async function(t,e){try{const n=await fetch(`http://localhost:7417/weather?latitude=${t}&longitude=${e}`);if(n.ok)return s(await n.json()),new Promise((t=>setTimeout(t,1500)));throw new Error}catch(t){return i("Location not found"),Promise.reject(t)}}(r,a).then((()=>function(){const t=document.querySelector("main");t.classList.add("main--dashboard-active"),function(t){document.querySelector(".header-wrapper__header").addEventListener("click",(()=>{t.classList=""}))}(t)}())).catch((t=>{})).finally((()=>{l(t.target.parentElement.children[2]),e.value="",m(t.target,"off")}))}}))))}()})();